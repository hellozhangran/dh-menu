#!/usr/bin/env node

var app = require('../app');

app.set('port', process.env.PORT || 85);

var server = app.listen(app.get('port'), function() {
	console.log('Express server listening on port ' + server.address().port);
});

var io = require('socket.io').listen(server);

// 根据不同用户缓存订餐数据
var cache = global.cache = {
	order: {}
}

// socket
io.sockets.on('connection', function(socket) {
	//点菜 d = {uid: 111, data: d}
	socket.on('server.menu.add', function(d) {
		if (!d || !d.uid) return;

		var uid = d.uid,
			data = d.data,
			cart = cache.order[uid] || (cache.order[uid] = []), // 用户购物车
			fid = data.id || 0, // food id
			food = (cart.push(data)); // food

		socket.broadcast.emit('client.menu.add', data);
	});
	//撤菜
	socket.on('server.menu.remove', function(d) {
		if (!d || !d.uid) return;

		var uid = d.uid,
			data = d.data,
			cart = cache.order[uid] || (cache.order[uid] = []), // 用户购物车
			fid = data.id || 0; // food id

		for (var i = 0; i < cart.length; i++) {
			if (cart[i].id == fid) {
				cart.splice(i, 1);
				break;
			}
		};

		socket.broadcast.emit('client.menu.remove', fid);
	});
	//重置订单
	socket.on('server.menu.reset', function(d) {
		if (!d || !d.uid) return;

		var uid = d.uid;
		cache.order[uid] = []; // 清空用户购物车

		socket.broadcast.emit('client.menu.reset');
	});
});